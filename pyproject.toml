[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "optimade-gateway"
authors = [
    {name = "Casper Welzel Andersen", email = "casper@welzel.nu"},
]
description = "A gateway server to query multiple OPTIMADE databases."
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
]
keywords = ["optimade", "materials", "database"]
requires-python = ">=3.10"
dynamic = ["version"]

dependencies = [
    "httpx>=0.24.1,<1",
    "motor~=3.4",
    "optimade[server]~=1.0",
]

[project.optional-dependencies]
docs = [
    "mike~=2.0",
    "mkdocs~=1.5",
    "mkdocs-awesome-pages-plugin~=2.9",
    "mkdocs-material~=9.5",
    "mkdocstrings[python]~=0.24.3",
]
dev = [
    "mongomock_motor~=0.0.29",
    "optimade-gateway[docs]",
    "pre-commit~=3.7",
    "pytest>=7.4.0,<9",
    "pytest-asyncio>=0.21.1,<0.23",
    "pytest-cov~=5.0",
    "pytest-httpx~=0.30.0",
]

[project.urls]
Home = "https://github.com/Materials-Consortia/optimade-gateway"
Documentation = "https://www.optimade.org/optimade-gateway"
Source = "https://github.com/Materials-Consortia/optimade-gateway"
"Issue Tracker" = "https://github.com/Materials-Consortia/optimade-gateway/issues"
Changelog = "https://github.com/Materials-Consortia/optimade-gateway/blob/main/CHANGELOG.md"
# Package = "https://pypi.org/project/optimade-gateway"

[project.scripts]
optimade-gateway = "optimade_gateway.run:run"

# TOOLS
[tool.flit.module]
name = "optimade_gateway"

[tool.flit.sdist]
exclude = [
    ".ci/",
    ".github/",
    "tests/",
    ".gitignore",
    ".pre-commit-config.yaml",
    ".codecov.yml",
    "docker-compose.yml",
    "Dockerfile",
]
include = [
    "optimade_gateway/*.json",
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-rs --cov=./optimade_gateway/ --cov-report=term-missing:skip-covered --no-cov-on-fail"
filterwarnings = [
    # Treat all warnings as errors
    "error",

    # mongomock uses pkg_resources
    "ignore:.*pkg_resources is deprecated as an API.*:DeprecationWarning",
]
asyncio_mode = "auto"

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "ARG",  # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "ICN",  # flake8-import-conventions
    "G",  # flake8-logging-format
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "RET",  # flake8-return
    "RUF",  # Ruff-specific
    "SIM",  # flake8-simplify
    "T20",  # flake8-print
    "YTT",  # flake8-2020
    "EXE",  # flake8-executable
    "NPY",  # NumPy specific rules
    "PYI",  # flake8-pyi
]
ignore = [
    "PLR",  # Design related pylint codes
    "B028",  # Bugbear: No explicit 'stacklevel' keyword argument to 'warnings.warn' call
]
# isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"optimade_gateway/run.py" = ["T20"]
"optimade_gateway/models/**" = ["B006"]
"optimade_gateway/queries/params.py" = ["B006"]
