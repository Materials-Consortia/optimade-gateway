name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - main
      - 'push-action/**'

jobs:
  basic_tests:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/ci_tests.yml@v2.8.2
    with:
      # General
      install_extras: "[dev]"

      # pre-commit
      run_pre-commit: true
      python_version_pre-commit: "3.10"

      # pylint & safety
      python_version_pylint_safety: "3.10"

      run_pylint: false
      run_safety: true
      # ID: 70612
      #   Package: Jinja2
      #   Has been disputed by the maintainer and multiple third parties.
      #   For more information see: https://github.com/advisories/GHSA-f6pv-j8mr-w6rr
      safety_options: |
        --ignore=70612

      # Build package
      run_build_package: true
      python_version_package: "3.10"
      build_libs: "flit"
      build_cmd: "flit build"

      # Build documentation
      run_build_docs: true
      python_version_docs: "3.10"
      warnings_as_errors: true

      use_mkdocs: true
      update_python_api_ref: true
      update_docs_landing_page: true
      package_dirs: "optimade_gateway"
      exclude_files: |
        __init__.py
        run.py
      full_docs_dirs: models

  pytest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        database-backend: ["mongodb", "mongomock"]

    services:
      mongo:
        image: mongo:7
        ports:
        - 27017:27017

    steps:
    - name: Checout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -e .[dev]

    - name: Test with pytest
      env:
        OPTIMADE_MONGO_URI: "mongodb://localhost:27017"
        OPTIMADE_DATABASE_BACKEND: ${{ matrix.database-backend }}
      run: pytest -vvv --cov-report=xml --color=yes

    - name: Upload coverage to Codecov
      if: github.repository == 'Materials-Consortia/optimade-gateway'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: optimade-gateway
        files: ./coverage.xml
        env_vars: OS,PYTHON
        flags: ${{ matrix.database-backend }}
      env:
        OS: ubuntu-latest
        PYTHON: ${{ matrix.python-version }}

  docker:
    name: Docker
    runs-on: ubuntu-latest

    steps:
    - name: Checout repository
      uses: actions/checkout@v4

    - name: Build the Docker app
      run: docker compose build
      env:
        OPTIMADE_BASE_URL: "http://gh_actions_host:5000"

    - name: Start the Docker app
      run: |
        docker compose up &
        .github/utils/wait_for_it.sh localhost:5000 -t 120
        sleep 5
