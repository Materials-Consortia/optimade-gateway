name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - main
      - 'push-action/**'

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    # timeout-minutes: 2

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools

        while IFS="" read -r line || [ -n "${line}" ]; do
          if [[ "${line}" =~ ^pre-commit.*$ ]]; then
            pre_commit="${line}"
          fi
        done < requirements_dev.txt

        while IFS="" read -r line || [ -n "${line}" ]; do
          if [[ "${line}" =~ ^invoke.*$ ]]; then
            invoke="${line}"
          fi
        done < requirements_docs.txt

        pip install ${pre_commit} ${invoke}

    - name: Test with pre-commit
      run: SKIP=pylint pre-commit run --all-files --show-diff-on-failure

  pylint-safety:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools
        pip install -U -r requirements.txt -r requirements_dev.txt -r requirements_docs.txt
        pip install safety

    - name: Run pylint
      run: pylint --rcfile=pyproject.toml *.py optimade_gateway

    - name: Run safety
      run: pip freeze | safety check --stdin

  pytest:
    runs-on: ubuntu-latest
    # timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    services:
      mongo:
        image: mongo:4
        ports:
        - 27017:27017

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools
        pip install -e .[dev]

    - name: Test with pytest
      env:
        OPTIMADE_MONGO_URI: "mongodb://localhost:27017"
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.8 && github.repository == 'Materials-Consortia/optimade-gateway'
      uses: codecov/codecov-action@v2
      with:
        name: optimade-gateway
        files: ./coverage.xml
        flags: pytest

  build-package:
    name: Build source distribution
    runs-on: ubuntu-latest
    # timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3

      - name: Check build and install source distribution
        uses: CasperWA/check-sdist-action@v1

  docker:
    name: Docker
    runs-on: ubuntu-latest
    # timeout-minutes

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Build the Docker app
      run: docker-compose build
      env:
        OPTIMADE_BASE_URL: "http://gh_actions_host:5000"

    - name: Start the Docker app
      run: |
        docker-compose up &
        .github/utils/wait_for_it.sh localhost:5000 -t 120
        sleep 5

  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools
        pip install -e .[docs]

    - name: Build
      run: |
        invoke create-api-reference-docs --pre-clean
        invoke create-docs-index
        mkdocs build --strict --verbose
