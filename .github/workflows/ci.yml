name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - 'push-action/**'

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    # timeout-minutes: 2

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Set up Python 3.8
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools

        while IFS="" read -r line || [ -n "${line}" ]; do
            if [[ "${line}" =~ ^pre-commit.*$ ]]; then
                pre_commit="${line}"
            fi
        done < requirements_dev.txt

        pip install ${pre_commit}

    - name: Test with pre-commit
      run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  pytest:
    runs-on: ubuntu-latest
    # timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    services:
      mongo:
        image: mongo:4
        ports:
        - 27017:27017

    steps:
    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools
        pip install -e .[dev]

    - name: Test with pytest
      env:
        OPTIMADE_MONGO_URI: "mongodb://localhost:27017"
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.8 && github.repository == 'Materials-Consortia/optimade-gateway'
      uses: codecov/codecov-action@v1.5.0
      with:
        name: optimade-gateway
        files: ./coverage.xml
        flags: pytest

  build-package:
    name: Build source distribution
    runs-on: ubuntu-latest
    # timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Check build and install source distribution
        uses: CasperWA/check-sdist-action@v1.1.0

  docker:
    name: Docker
    runs-on: ubuntu-latest
    # timeout-minutes

    steps:
    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 2

    - name: Setup and run OPTIMADE Python tools server
      run: |
        git clone --recurse-submodules https://github.com/Materials-Consortia/optimade-python-tools
        docker-compose -f ./optimade-python-tools/docker-compose.yml up optimade &
        .github/utils/wait_for_it.sh localhost:3213 -t 120

    - name: Build the Docker app
      run: docker-compose build --build-arg CONFIG_FILE=".github/docker/docker_config.json"

    - name: Start the Docker app (adding OPT server to 'gateway' network)
      run: |
        docker-compose up &
        .github/utils/wait_for_it.sh localhost:5000 -t 120
        sleep 5
        docker network connect --alias optimade-sample-server optimade-gateway_gateway optimade-python-tools_optimade_1

    - name: OPTIMADE Validator for gateway
      uses: Materials-Consortia/optimade-validator-action@v2
      with:
        port: 5000
        path: /gateways/docker_ci
        all versioned paths: True
        validate unversioned path: True
        validator version: v0.14.1

  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 2

    - uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools
        pip install -e .[docs]

        while IFS="" read -r line || [ -n "${line}" ]; do
            if [[ "${line}" =~ ^invoke.*$ ]]; then
                invoke="${line}"
            fi
        done < requirements_dev.txt

        pip install ${invoke}

    - name: Build
      run: |
        invoke create-api-reference-docs --pre-clean
        invoke create-docs-index
        mkdocs build --strict --verbose
