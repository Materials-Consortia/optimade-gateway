name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - 'push-action/**'

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    # timeout-minutes: 2

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools

        while IFS="" read -r line || [ -n "${line}" ]; do
            if [[ "${line}" =~ ^pre-commit.*$ ]]; then
                pre_commit="${line}"
            fi
        done < requirements_dev.txt

        pip install ${pre_commit}

    - name: Test with pre-commit
      run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  pytest:
    runs-on: ubuntu-latest
    # timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    services:
      mongo:
        image: mongo:4.2
        ports:
        - 27017:27017

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools
        pip install -e .[dev]

        # Until a newer version than 0.12.8 of `optimade` is released, we need to install from GitHub
        pip install --force-reinstall git+https://github.com/Materials-Consortia/optimade-python-tools.git@master#egg=optimade

    - name: Test with pytest
      env:
        OPTIMADE_CI_FORCE_MONGO: 1
        OPTIMADE_GATEWAY_MONGO_URI: "mongodb://localhost:27017"
      run: pytest -rs -vvv --cov=./optimade_gateway/ --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.8 && github.repository == 'epfl-theos/optimade-gateway'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: optimade-gateway
        file: ./coverage.xml

  build-package:
    runs-on: ubuntu-latest
    # timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2

      - name: Check build and install source distribution
        uses: CasperWA/check-sdist-action@v1

  docker:
    runs-on: ubuntu-latest
    # timeout-minutes

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Build the Docker app
      run: docker-compose build --build-arg CONFIG_FILE=".github/docker/docker_config.json"

    - name: Start the Docker app
      run: |
        docker-compose --env-file .github/docker/.env.ci up &
        .github/workflows/wait_for_it.sh localhost:5000 -t 120
        sleep 5

    - name: OPTIMADE Validator for /structures
      uses: CasperWA/optimade-validator-action@close_56_as-type-fix
      with:
        port: 5000
        path: /gateways/twodbs/structures
        as type: structures
        validator version: try-as_type-fix-validator
