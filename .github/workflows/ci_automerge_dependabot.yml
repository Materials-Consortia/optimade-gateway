name: CI - Activate auto-merging for Dependabot PRs

on:
  pull_request:
    branches: [ci/dependabot-updates]

jobs:

  update-dependabot-branch:
    name: Update permanent dependabot branch
    if: github.repository_owner == 'Materials-Consortia' && startsWith(github.head_ref, 'dependabot/')
    runs-on: ubuntu-latest

    env:
      DEPENDABOT_BRANCH: ci/dependabot-updates
      GIT_USER_NAME: OPTIMADE Developers
      GIT_USER_EMAIL: "dev@optimade.org"

    steps:
    - name: Setup git config
      run: |
        git config --global user.name "${GIT_USER_NAME}"
        git config --global user.email "${GIT_USER_EMAIL}"

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel

        while IFS="" read -r line || [ -n "${line}" ]; do
          if [[ "${line}" =~ ^invoke.*$ ]]; then
            invoke="${line}"
          fi
        done < requirements_docs.txt

        pip install ${invoke}

    - name: Run task, commit and push changes
      run: |
        invoke update-pytest-reqs

        git add pyproject.toml
        if [ -n "$(git status --porcelain pyproject.toml)" ]; then
          # Only commit if there's something to commit (git will return non-zero otherwise)
          git commit -m "Update pytest dependency config"
          git push origin/${{ github.head_ref }}
        fi

    - name: Activate auto-merge
      run: |
        PR_ID="$(gh api graphql -F owner='{owner}' -F name='{repo}' -f query='query($owner: String!, $name: String!) {repository(owner: $owner, name: $name) {pullRequest(number: ${{ github.event.pull_request.number }}) {id}}}' --jq '.data.repository.pullRequest.id')"
        gh api graphql -f pr_id="$PR_ID" -f query='mutation($pr_id: String!) {enablePullRequestAutoMerge(input:{mergeMethod:SQUASH,pullRequestId:$pr_id }) {pullRequest {number}}}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
